{
    "name": "@goauthentik/web",
    "version": "0.0.0",
    "dependencies": {
        "@codemirror/lang-html": "^6.4.9",
        "@codemirror/lang-javascript": "^6.2.2",
        "@codemirror/lang-python": "^6.1.6",
        "@codemirror/lang-xml": "^6.1.0",
        "@codemirror/legacy-modes": "^6.4.0",
        "@codemirror/theme-one-dark": "^6.1.2",
        "@floating-ui/dom": "^1.6.9",
        "@formatjs/intl-listformat": "^7.5.7",
        "@fortawesome/fontawesome-free": "^6.6.0",
        "@goauthentik/api": "^2024.6.3-1723645891",
        "@lit/context": "^1.1.2",
        "@lit/localize": "^0.12.2",
        "@lit/reactive-element": "^2.0.4",
        "@lit/task": "^1.0.1",
        "@open-wc/lit-helpers": "^0.7.0",
        "@patternfly/elements": "^3.0.2",
        "@patternfly/patternfly": "^4.224.2",
        "@sentry/browser": "^8.25.0",
        "@webcomponents/webcomponentsjs": "^2.8.0",
        "base64-js": "^1.5.1",
        "chart.js": "^4.4.3",
        "chartjs-adapter-moment": "^1.0.1",
        "codemirror": "^6.0.1",
        "construct-style-sheets-polyfill": "^3.1.0",
        "core-js": "^3.38.0",
        "country-flag-icons": "^1.5.13",
        "fuse.js": "^7.0.0",
        "guacamole-common-js": "^1.5.0",
        "lit": "^3.2.0",
        "md-front-matter": "^1.0.4",
        "mermaid": "^10.9.1",
        "rapidoc": "^9.3.4",
        "showdown": "^2.1.0",
        "style-mod": "^4.1.2",
        "ts-pattern": "^5.3.1",
        "webcomponent-qr-code": "^1.2.0",
        "yaml": "^2.5.0"
    },
    "devDependencies": {
        "@babel/core": "^7.25.2",
        "@babel/plugin-proposal-class-properties": "^7.18.6",
        "@babel/plugin-proposal-decorators": "^7.24.7",
        "@babel/plugin-transform-private-methods": "^7.24.7",
        "@babel/plugin-transform-private-property-in-object": "^7.24.7",
        "@babel/plugin-transform-runtime": "^7.24.7",
        "@babel/preset-env": "^7.25.3",
        "@babel/preset-typescript": "^7.24.7",
        "@changesets/cli": "^2.27.5",
        "@custom-elements-manifest/analyzer": "^0.10.2",
        "@eslint/js": "^9.9.0",
        "@genesiscommunitysuccess/custom-elements-lsp": "^5.0.3",
        "@hcaptcha/types": "^1.0.4",
        "@jeysal/storybook-addon-css-user-preferences": "^0.2.0",
        "@lit/localize-tools": "^0.8.0",
        "@rollup/plugin-replace": "^5.0.7",
        "@spotlightjs/spotlight": "^2.3.0",
        "@storybook/addon-essentials": "^8.2.7",
        "@storybook/addon-links": "^8.2.7",
        "@storybook/api": "^7.6.17",
        "@storybook/blocks": "^8.0.8",
        "@storybook/manager-api": "^8.2.7",
        "@storybook/web-components": "^8.2.7",
        "@storybook/web-components-vite": "^8.2.7",
        "@trivago/prettier-plugin-sort-imports": "^4.3.0",
        "@types/chart.js": "^2.9.41",
        "@types/codemirror": "5.60.15",
        "@types/eslint__js": "^8.42.3",
        "@types/grecaptcha": "^3.0.9",
        "@types/guacamole-common-js": "1.5.2",
        "@types/showdown": "^2.0.6",
        "@typescript-eslint/eslint-plugin": "^8.0.1",
        "@typescript-eslint/parser": "^8.0.1",
        "@wdio/browser-runner": "^8.40.2",
        "@wdio/cli": "^8.40.2",
        "@wdio/mocha-framework": "^8.40.2",
        "@wdio/spec-reporter": "^8.36.1",
        "babel-plugin-macros": "^3.1.0",
        "babel-plugin-tsconfig-paths": "^1.0.3",
        "chokidar": "^3.6.0",
        "cross-env": "^7.0.3",
        "esbuild": "^0.23.0",
        "eslint": "^9.8.0",
        "eslint-plugin-lit": "^1.14.0",
        "eslint-plugin-sonarjs": "^1.0.4",
        "eslint-plugin-wc": "^2.1.0",
        "github-slugger": "^2.0.0",
        "glob": "^11.0.0",
        "globals": "^15.9.0",
        "lit-analyzer": "^2.0.3",
        "lockfile-lint": "^4.14.0",
        "npm-run-all": "^4.1.5",
        "prettier": "^3.3.3",
        "pseudolocale": "^2.1.0",
        "react": "^18.2.0",
        "react-dom": "^18.3.1",
        "rollup-plugin-modify": "^3.0.0",
        "rollup-plugin-postcss-lit": "^2.1.0",
        "storybook": "^8.1.11",
        "storybook-addon-mock": "^5.0.0",
        "syncpack": "^12.3.3",
        "ts-lit-plugin": "^2.0.2",
        "ts-node": "^10.9.2",
        "tslib": "^2.6.3",
        "turnstile-types": "^1.2.1",
        "typescript": "^5.5.4",
        "typescript-eslint": "^8.1.0",
        "vite-tsconfig-paths": "^4.3.2",
        "wdio-wait-for": "^3.0.11",
        "wireit": "^0.14.4"
    },
    "engines": {
        "node": ">=20"
    },
    "license": "MIT",
    "optionalDependencies": {
        "@esbuild/darwin-arm64": "^0.23.0",
        "@esbuild/linux-amd64": "^0.18.11",
        "@esbuild/linux-arm64": "^0.23.0",
        "@rollup/rollup-darwin-arm64": "4.20.0",
        "@rollup/rollup-linux-arm64-gnu": "4.20.0",
        "@rollup/rollup-linux-x64-gnu": "4.20.0"
    },
    "private": true,
    "scripts": {
        "build": "wireit",
        "build-locales": "wireit",
        "build-locales:build": "wireit",
        "build-proxy": "wireit",
        "build:sfe": "wireit",
        "esbuild:watch": "node build.mjs --watch",
        "extract-locales": "wireit",
        "format": "wireit",
        "lint": "wireit",
        "lint:lockfile": "wireit",
        "lint:nightmare": "wireit",
        "lint:package": "wireit",
        "lint:precommit": "wireit",
        "lit-analyse": "wireit",
        "postinstall": "bash scripts/patch-spotlight.sh",
        "precommit": "wireit",
        "prettier": "wireit",
        "prettier-check": "wireit",
        "pseudolocalize": "wireit",
        "storybook": "storybook dev -p 6006",
        "storybook:build": "wireit",
        "storybook:build-import-map": "wireit",
        "test": "wireit",
        "test-view": "wireit",
        "test-watch": "npx wdio run ./wdio.conf.ts --autoCompileOpts.tsNodeOpts.project=tsconfig.test.json --watch",
        "tsc": "wireit",
        "watch": "run-s build-locales esbuild:watch"
    },
    "wireit": {
        "build": {
            "#comment": [
                "`npm run build` and `npm run watch` are the most common ",
                "commands you should be using when working on the front-end ",
                "The files and output spec here expect you to use `npm run build --watch` ",
                "instead of `npm run watch`. The former is more comprehensive, but ",
                "the latter is faster."
            ],
            "command": "${NODE_RUNNER} build.mjs",
            "files": [
                "src/**/*.{css,jpg,png,ts,js,json}",
                "!src/**/*.stories.ts",
                "!src/**/*.tests.ts",
                "!src/locales/*.ts",
                "!src/locale-codes.ts",
                "icons/**/*"
            ],
            "output": [
                "./dist/admin/**",
                "./dist/user/**",
                "./dist/flow/**",
                "./dist/standalone/api-browser/**",
                "./dist/standalone/loading/**",
                "./dist/enterprise/**",
                "./dist/poly-*.js",
                "./dist/poly-*.js.map",
                "./dist/custom.css",
                "./dist/theme-dark.css",
                "./dist/patternfly.min.css"
            ],
            "dependencies": [
                "build-locales",
                "./packages/sfe:build"
            ],
            "env": {
                "NODE_RUNNER": {
                    "external": true,
                    "default": "node"
                }
            }
        },
        "build:sfe": {
            "dependencies": [
                "./packages/sfe:build"
            ],
            "files": [
                "./packages/sfe/**/*.ts"
            ]
        },
        "build-proxy": {
            "command": "node build.mjs --proxy",
            "dependencies": [
                "build-locales"
            ]
        },
        "build-locales:build": {
            "command": "lit-localize build"
        },
        "build-locales:repair": {
            "command": "prettier --write ./src/locale-codes.ts"
        },
        "build-locales": {
            "command": "node scripts/build-locales.mjs",
            "files": [
                "./xliff/*.xlf"
            ],
            "output": [
                "./src/locales/*.ts",
                "./src/locale-codes.ts"
            ]
        },
        "extract-locales": {
            "command": "lit-localize extract"
        },
        "format": {
            "command": "prettier --write .",
            "dependencies": [
                "lint:package"
            ]
        },
        "format:packages": {
            "dependencies": [
                "./packages/sfe:prettier"
            ]
        },
        "lint": {
            "command": "eslint --max-warnings 0 --fix",
            "env": {
                "NODE_OPTIONS": "--max_old_space_size=65536"
            }
        },
        "lint:components": {
            "command": "lit-analyzer src"
        },
        "lint:types": {
            "command": "tsc --noEmit -p .",
            "dependencies": [
                "build-locales"
            ]
        },
        "lint:lockfile": {
            "command": "lockfile-lint --path package.json --type npm --allowed-hosts npm --validate-https"
        },
        "lint:lockfiles": {
            "dependencies": [
                "./packages/sfe:lint:lockfile"
            ]
        },
        "lint:package": {
            "command": "syncpack format -i '    '"
        },
        "lint:nightmare": {
            "command": "${NODE_RUNNER} ./scripts/eslint.mjs --nightmare",
            "env": {
                "NODE_RUNNER": {
                    "external": true,
                    "default": "node"
                }
            }
        },
        "lint:precommit": {
            "command": "${NODE_RUNNER} ./scripts/eslint.mjs --precommit",
            "env": {
                "NODE_RUNNER": {
                    "external": true,
                    "default": "node"
                }
            }
        },
        "lint:spelling": {
            "command": "node scripts/check-spelling.mjs"
        },
        "lit-analyse": {
            "command": "lit-analyzer src"
        },
        "precommit": {
            "command": "prettier --write .",
            "dependencies": [
                "lint:types",
                "lint:components",
                "lint:spelling",
                "lint:lockfile",
                "lint:lockfiles",
                "lint:precommit",
                "format:packages"
            ]
        },
        "prettier": {
            "dependencies": [
                "format"
            ]
        },
        "prettier-check": {
            "command": "prettier --check ."
        },
        "pseudolocalize": {
            "command": "node scripts/pseudolocalize.mjs"
        },
        "storybook:build": {
            "command": "storybook build",
            "env": {
                "NODE_OPTIONS": "--max_old_space_size=8192"
            }
        },
        "storybook:build-import-map": {
            "command": "node scripts/build-storybook-import-maps.mjs"
        },
        "test": {
            "command": "wdio run ./wdio.conf.ts --logLevel=warn --autoCompileOpts.tsNodeOpts.project=tsconfig.test.json",
            "env": {
                "CI": "true"
            }
        },
        "test-view": {
            "command": "wdio run ./wdio.conf.ts --autoCompileOpts.tsNodeOpts.project=tsconfig.test.json"
        },
        "tsc": {
            "dependencies": [
                "lint:types"
            ]
        }
    },
    "workspaces": [
        ".",
        "./packages/*"
    ]
}
