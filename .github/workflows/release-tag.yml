name: authentik-on-tag

on:
  push:
    tags:
      - "version/*"

jobs:
  build:
    name: Create Release from Tag
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Pre-release test
        run: |
          echo "PG_PASS=$(openssl rand -base64 32)" >> .env
          echo "AUTHENTIK_SECRET_KEY=$(openssl rand -base64 32)" >> .env
          docker buildx install
          mkdir -p ./gen-ts-api
          docker build -t testing:latest .
          echo "AUTHENTIK_IMAGE=testing" >> .env
          echo "AUTHENTIK_TAG=latest" >> .env
          docker-compose up --no-start
          docker-compose start postgresql redis
          docker-compose run -u root server test-all
          docker-compose down -v --remove-orphans
      - name: Pre-release test migrations
        run: |
          sed -e 's;AUTHENTIK_IMAGE=.*;AUTHENTIK_IMAGE=ghcr.io/goauthentik/server' -i .env
          sed -e 's;AUTHENTIK_TAG=.*;AUTHENTIK_TAG='"$(curl https://version.goauthentik.io/version.json | jq -r .stable.version)" -i .env
          docker-compose up --no-start
          docker-compose start postgresql redis
          docker-compose start server worker
          timeout 600 bash -c 'while [[ "$(curl -s -o /dev/null -w ''%{http_code}'' http://localhost:9009/api/v3/root/config/)" != "200" ]]; do sleep 5; done' || false
          docker-compose stop server worker
          echo "AUTHENTIK_IMAGE=testing" >> .env
          echo "AUTHENTIK_TAG=latest" >> .env
          docker-compose run -u root server test-all
          docker-compose down -v --remove-orphans
      - id: generate_token
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.GH_APP_ID }}
          private_key: ${{ secrets.GH_APP_PRIVATE_KEY }}
      - name: Extract version number
        id: get_version
        uses: actions/github-script@v6
        with:
          github-token: ${{ steps.generate_token.outputs.token }}
          script: |
            return context.payload.ref.replace(/\/refs\/tags\/version\//, '');
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1.1.4
        env:
          GITHUB_TOKEN: ${{ steps.generate_token.outputs.token }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ steps.get_version.outputs.result }}
          draft: true
          prerelease: false
