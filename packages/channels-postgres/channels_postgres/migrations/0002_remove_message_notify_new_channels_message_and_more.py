# Generated by Django 5.1.13 on 2025-10-04 14:02

import pgtrigger.compiler
import pgtrigger.migrations
from django.db import migrations


class Migration(migrations.Migration):

    dependencies = [
        ("channels_postgres", "0001_initial"),
    ]

    operations = [
        pgtrigger.migrations.RemoveTrigger(
            model_name="message",
            name="notify_new_channels_message",
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="message",
            trigger=pgtrigger.compiler.Trigger(
                name="notify_new_channels_message",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    constraint="CONSTRAINT",
                    declare="DECLARE payload text; encoded_message text; epoch text;",
                    func="\n                    encoded_message := encode(NEW.message, 'base64');\n                    epoch := extract(epoch from NEW.expires)::text;\n                    IF octet_length(NEW.pk::text) + octet_length(NEW.channel) + octet_length(encoded_message) + octet_length(epoch) + 3 <= 8000 THEN\n                        payload := NEW.id::text || ':' || NEW.channel || ':' || encoded_message || ':' || epoch;\n                    ELSE\n                        payload := NEW.id::text || ':' || NEW.channel;\n                    END IF;\n\n                    PERFORM pg_notify('channels_messages', payload);\n                    RETURN NEW;\n                ",
                    hash="21e0b0342c755c99e6b0829b493bb2bce73394b1",
                    operation="INSERT",
                    pgid="pgtrigger_notify_new_channels_message_955d6",
                    table="channels_postgres_message",
                    timing="DEFERRABLE INITIALLY DEFERRED",
                    when="AFTER",
                ),
            ),
        ),
    ]
