# Generated by Django 5.1.13 on 2025-10-03 14:56

import channels_postgres.models
import pgtrigger.compiler
import pgtrigger.migrations
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="GroupChannel",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("group_key", models.TextField(db_index=True)),
                ("channel", models.TextField(db_index=True)),
                (
                    "expires",
                    models.DateTimeField(
                        db_index=True, default=channels_postgres.models._default_group_expiry
                    ),
                ),
            ],
            options={
                "verbose_name": "Group channel",
                "verbose_name_plural": "Group channels",
                "indexes": [
                    models.Index(
                        fields=["group_key", "channel"], name="channels_po_group_k_437656_idx"
                    ),
                    models.Index(
                        fields=["group_key", "expires"], name="channels_po_group_k_15acc8_idx"
                    ),
                ],
            },
        ),
        migrations.CreateModel(
            name="Message",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4, editable=False, primary_key=True, serialize=False
                    ),
                ),
                ("channel", models.TextField(db_index=True)),
                ("message", models.BinaryField()),
                (
                    "expires",
                    models.DateTimeField(
                        db_index=True, default=channels_postgres.models._default_message_expiry
                    ),
                ),
            ],
            options={
                "verbose_name": "Message",
                "verbose_name_plural": "Messages",
                "indexes": [
                    models.Index(
                        fields=["channel", "expires"], name="channels_po_channel_1e5389_idx"
                    )
                ],
            },
        ),
        pgtrigger.migrations.AddTrigger(
            model_name="message",
            trigger=pgtrigger.compiler.Trigger(
                name="notify_new_channels_message",
                sql=pgtrigger.compiler.UpsertTriggerSql(
                    constraint="CONSTRAINT",
                    declare="DECLARE payload text; encoded_message text; epoch text;",
                    func="\n                    encoded_message := encode(NEW.message, 'base64');\n                    epoch := extract(epoch from NEW.expire)::text;\n                    IF octet_length(NEW.pk::text) + octet_length(NEW.channel) + octet_length(encoded_message) + octet_length(epoch) + 3 <= 8000 THEN\n                        payload := NEW.id::text || ':' || NEW.channel || ':' || encoded_message || ':' || epoch;\n                    ELSE\n                        payload := NEW.id::text || ':' || NEW.channel;\n                    END IF;\n\n                    PERFORM pg_notify('channels_messages', payload);\n                    RETURN NEW;\n                ",
                    hash="566521fe0992286c01d44e752850751fdf430ebb",
                    operation="INSERT",
                    pgid="pgtrigger_notify_new_channels_message_955d6",
                    table="channels_postgres_message",
                    timing="DEFERRABLE INITIALLY DEFERRED",
                    when="AFTER",
                ),
            ),
        ),
    ]
