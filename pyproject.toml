[tool.pyright]
ignore = [
  "**/migrations/**",
  "**/node_modules/**"
]

reportMissingTypeStubs = false
strictParameterNoneValue = true
strictDictionaryInference = true
strictListInference = true
verboseOutput = false
pythonVersion = "3.9"
pythonPlatform = "Linux"

[tool.black]
line-length = 100
target-version = ['py39']
exclude = 'node_modules'

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 100
src_paths = ["authentik", "tests", "lifecycle"]
force_to_top = "*"

[tool.coverage.run]
source = ["authentik"]
relative_files = true
omit = ["*/asgi.py", "manage.py", "*/migrations/*", "*/apps.py", "website/"]

[tool.coverage.report]
sort = "Cover"
skip_covered = true
precision = 2
exclude_lines = [
  "pragma: no cover",
  # Don't complain about missing debug-only code:
  "def __unicode__",
  "def __str__",
  "def __repr__",
  "if self.debug",
  "if TYPE_CHECKING",
  # Don't complain if tests don't hit defensive assertion code:
  "raise AssertionError",
  "raise NotImplementedError",
  # Don't complain if non-runnable code isn't run:
  "if 0:",
  "if __name__ == .__main__.:",
]
show_missing = true

[tool.pylint.master]
disable = [
  "arguments-differ",
  "no-self-use",
  "fixme",
  "locally-disabled",
  "too-many-ancestors",
  "too-few-public-methods",
  "import-outside-toplevel",
  "bad-continuation",
  "signature-differs",
  "similarities",
  "cyclic-import",
  "protected-access",
  "raise-missing-from",
  # To preserve django's translation function we need to use %-formatting
  "consider-using-f-string",
]

load-plugins = ["pylint_django", "pylint.extensions.bad_builtin"]
django-settings-module = "authentik.root.settings"
extension-pkg-whitelist = ["lxml", "xmlsec"]

# Allow constants to be shorter than normal (and lowercase, for settings.py)
const-rgx = "[a-zA-Z0-9_]{1,40}$"

ignored-modules = ["django-otp", "binascii", "socket", "zlib"]
generated-members = ["xmlsec.constants.*", "xmlsec.tree.*", "xmlsec.template.*"]
ignore = "migrations"
max-attributes = 12
max-branches = 20

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "authentik.root.settings"
python_files = ["tests.py", "test_*.py", "*_tests.py"]
junit_family = "xunit2"
addopts = "-p no:celery --junitxml=unittest.xml"

[tool.poetry]
name = "authentik"
version = "2021.12.4"
description = ""
authors = ["Jens Langhammer <jens.langhammer@beryju.org>"]

[tool.poetry.dependencies]
python = "^3.10"
boto3 = "*"
celery = "*"
channels = "*"
channels-redis = "*"
codespell = "*"
colorama = "*"
dacite = "*"
deepmerge = "*"
defusedxml = "*"
django = "*"
django-dbbackup = { git = 'https://github.com/django-dbbackup/django-dbbackup.git', rev = '9d1909c30a3271c8c9c8450add30d6e0b996e145' }
django-filter = "*"
django-guardian = "*"
django-model-utils = "*"
django-otp = "*"
django-prometheus = "*"
django-redis = "*"
django-storages = "*"
djangorestframework = "*"
djangorestframework-guardian = "*"
docker = "*"
drf-spectacular = "*"
duo-client = "*"
facebook-sdk = "*"
geoip2 = "*"
gunicorn = "*"
kubernetes = "==v19.15.0"
ldap3 = "*"
lxml = "*"
packaging = "*"
psycopg2-binary = "*"
pycryptodome = "*"
pyjwt = "*"
pyyaml = "*"
requests-oauthlib = "*"
sentry-sdk = { git = 'https://github.com/beryju/sentry-python.git', rev = '379aee28b15d3b87b381317746c4efd24b3d7bc3' }
service_identity = "*"
structlog = "*"
swagger-spec-validator = "*"
twisted = "==21.7.0"
ua-parser = "*"
urllib3 = {extras = ["secure"],version = "*"}
uvicorn = {extras = ["standard"],version = "*"}
webauthn = "*"
xmlsec = "*"
flower = "*"
wsproto = "*"

[tool.poetry.dev-dependencies]
bandit = "*"
black = "*"
bump2version = "*"
colorama = "*"
coverage = {extras = ["toml"],version = "*"}
pylint = "*"
pylint-django = "*"
pytest = "*"
pytest-django = "*"
pytest-randomly = "*"
requests-mock = "*"
selenium = "*"
importlib-metadata = "*"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
