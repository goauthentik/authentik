== TMP DOCS FOR PG UPGRADE ==

1. Dump your database using `docker exec -it authentik-postgresql pg_dumpall -U authentik > upgrade_backup_12.sql`
2. Stop your containers by running docker compose stop
3. Take a backup of your existing database just to be safe
    - If you are using Docker volumes:
    docker volume create database-backup
    docker run --rm -v database:/from -v database-backup:/to alpine ash -c "cd /from && cp -a . /to"

    - If you are using directories on your host:
    cp /path/v12/db /path/v12/db-backup

4. Add the Postgres v16 docker compose service and comment out the old v12 one. Make sure to change volume name/path and image version. Why: no need to update pg hostname in env / depends on + v12 will be removed later
5. To ensure authentik doesn't play with the database while you edit it, comment out the network section of the pg service
6. dc pull
7. run with dc up --build -d

8. run cat upgrade_backup_12.sql | docker exec -i authentik-postgresql psql -U authentik to import your previous db

9. you must modify password type 
    - docker exec -it authentik-postgresql /bin/bash
    - vi /var/lib/postgresql/data/postgresql.conf
    - "i" to enter insert mode and uncomment `password_encryption = scram-sha-256` under Authentication
    - "escape", ":wq" to save and quit
    - psql into your db "psql -U authentik"

    you can run this sql if you wish for users which need upgrade:
    SELECT
    rolname, rolpassword ~ '^SCRAM-SHA-256\$' AS has_upgraded
    FROM pg_authid
    WHERE rolcanlogin;

    - "\password authentik" and enter the password you set your .env under PG_PASS

todo: fix err  psycopg.errors.DuplicateTable: relation "X" already exists 
todo: docker compose cleanup
todo: move this to markdown when ready