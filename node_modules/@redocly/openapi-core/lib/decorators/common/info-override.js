"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {
            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))
                t[p[i]] = s[p[i]];
        }
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InfoOverride = void 0;
const InfoOverride = (newInfo) => {
    return {
        Info: {
            leave(info) {
                if (typeof newInfo !== 'object' || Array.isArray(newInfo) || newInfo === null) {
                    throw new Error(`"info-override" decorator should be called with an object`);
                }
                const { severity: _ } = newInfo, rest = __rest(newInfo, ["severity"]);
                Object.assign(info, rest);
            },
        },
    };
};
exports.InfoOverride = InfoOverride;
