# Generated by Django 5.1.11 on 2025-07-31 11:55

import django.core.validators
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("authentik_brands", "0010_brand_client_certificates_and_more"),
        ("authentik_policies", "0011_policybinding_failure_result_and_more"),
    ]

    operations = [
        migrations.CreateModel(
            name="BrandPolicy",
            fields=[
                (
                    "policybindingmodel_ptr",
                    models.OneToOneField(
                        auto_created=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        parent_link=True,
                        primary_key=True,
                        serialize=False,
                        to="authentik_policies.policybindingmodel",
                    ),
                ),
                ("name", models.TextField(unique=True)),
                (
                    "path",
                    models.TextField(
                        default="^$",
                        help_text="Regex. If any request's path matches this, the policies bound to this instance will run. E.g. ^/api/v[\\d+]/rbac/",
                    ),
                ),
                (
                    "failure_http_status_code",
                    models.IntegerField(
                        validators=[
                            django.core.validators.MinValueValidator(100),
                            django.core.validators.MaxValueValidator(599),
                        ]
                    ),
                ),
                ("failure_response", models.TextField(blank=True, default="")),
                (
                    "brand",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="authentik_brands.brand"
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
            bases=("authentik_policies.policybindingmodel", models.Model),
        ),
    ]
